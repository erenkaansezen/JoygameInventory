@model IEnumerable<Product>
@{
    Layout = "_Layout";
}
<!DOCTYPE html>
<html lang="tr">
<head>
    <style>
        .table-container {
            margin-top: 20px;
        }

        .table th, .table td {
            vertical-align: middle;
            text-align: center; /* Diğer kolonlar için yazıları ortalamak */
            padding: 15px; /* Kolonlar arasındaki boşluğu artırmak için */
        }

        .btn-custom {
            padding: 8px 12px;
            font-size: 14px;
        }

        .btn-edit {
            background-color: #f0ad4e;
            color: white;
        }

        .btn-delete {
            background-color: #d9534f;
            color: white;
        }

        .btn-view {
            background-color: #5bc0de;
            color: white;
        }

        .product-img {
            width: 50px;
            height: 50px;
            object-fit: cover;
        }
    </style>
</head>
<body>

    <!-- Sayfa Başlığı -->
    <div class="container">
        <h2 class="my-4">
            | Envanter Listesi
        </h2>
        <hr />
        <div class="row">
            <div class="col-md-6">
                <a asp-controller="ProductManagement" asp-action="ProductCreate" class="btn btn-outline-success btn-custom ms-2 w-100">Ürün Ekle</a>
            </div>
            <div class="col-md-6">
                <form asp-action="ProductList" method="get">
                    <div class="input-group mb-3">
                        <input type="text" id="searchTerm" name="searchTerm" class="form-control" placeholder="Ürün Adı ile ara" />
                    </div>
                </form>
            </div>
        </div>
        @await Component.InvokeAsync("CategoriesList")
        <vc:categories-list />
        <hr />
        <!-- Ürünler Tablosu -->
        <div class="table-container">
            <table id="productTable" class="table table-striped">
                <thead>
                    <tr>
                        <th></th>
                        <th>Ürün Barkodu</th>
                        <th>Ürün Markası</th>
                        <th>Ürün Modeli</th>
                        <th>Durumu</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model)
                    {
                        <tr>
                            <th>@product.Id</th>
                            <td>@product.ProductBarkod</td>
                            <td>@product.ProductBrand</td>
                            <td>@product.ProductModel</td>
                            <td>@product.Status</td>

                            <td>
                                <a asp-controller="ProductManagement" asp-action="ProductDetails" asp-route-id="@product.Id" class="btn btn-outline-dark btn-custom">Envanter Detayı</a>
                            </td>
                            <td>
                                <form asp-controller="ProductManagement" asp-action="ProductDelete" method="post" style="display: inline;">
                                    <input type="hidden" value="@product.Id" name="id">
                                    <button type="submit" class="btn btn-danger btn-custom deleteProduct">Envanteri Sil</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>

    <!-- Bootstrap ve jQuery JS -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            // Search filter: her tuşlama ile arama yapılacak
            $('#searchTerm').on('keyup', function () {
                var searchTerm = $(this).val().toLowerCase();  // Arama terimini al

                // Tablo satırlarını kontrol et
                $('#productTable tbody tr').each(function () {
                    var row = $(this);  // Her bir satır
                    var text = row.text().toLowerCase();  // Satırdaki tüm yazıyı al

                    // Eğer satırda arama terimi bulunuyorsa, satırı göster
                    if (text.indexOf(searchTerm) !== -1) {
                        row.show();
                    } else {
                        row.hide();  // Arama terimi satırda yoksa, satırı gizle
                    }
                });
            });

            // 'Kullanıcıyı Sil' butonuna tıklama olayını dinliyoruz
            $('.deleteProduct').click(function (e) {
                e.preventDefault();  // Default form submit işlemini engelliyoruz

                var button = $(this);  // Butonu alıyoruz
                var form = button.closest('form');  // Formu alıyoruz
                var row = button.closest('tr');  // Satırın kendisini alıyoruz

                if (confirm('Bu ürünü silmek istediğinizden emin misiniz?')) {
                    // AJAX isteği
                    $.ajax({
                        url: form.attr('action'),  // Formun action değerini alıyoruz
                        type: form.attr('method'),  // Formun method türünü alıyoruz (POST)
                        data: form.serialize(),  // Form verilerini alıyoruz
                        success: function (response) {
                            row.remove();  // Başarıyla silindiğinde satırı kaldır
                            alert('Ürün başarıyla kaldırıldı!');
                        },
                        error: function () {
                            alert('Bir hata oluştu, lütfen tekrar deneyin.');
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>
